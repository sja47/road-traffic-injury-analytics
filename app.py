# -*- coding: utf-8 -*-
"""Untitled51.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bpjPOZ2bQhrQZlRe9kOgWBAdX3irz2UH
"""

# STEP 1: Upload the CSV file to Colab
from google.colab import files
import pandas as pd

# Upload manually through file selector
uploaded = files.upload()

# Load the uploaded file
import io
df = pd.read_csv(io.BytesIO(uploaded['road_traffic_injuries_sample.csv']))

# Preview the first few rows
df.head()

# STEP 2: Clean and validate the data

# 1. Drop duplicates if any
df.drop_duplicates(inplace=True)

# 2. Check for missing values
missing = df.isnull().sum()
print("Missing values per column:\n", missing)

# 3. Check data types
print("\nData types:")
print(df.dtypes)

# 4. Convert 'Year' to integer if needed
df['Year'] = df['Year'].astype(int)

# 5. Ensure rates are numeric and non-negative
df['Death_Rate_per_100k'] = pd.to_numeric(df['Death_Rate_per_100k'], errors='coerce')
df['Injury_Rate_per_100k'] = pd.to_numeric(df['Injury_Rate_per_100k'], errors='coerce')

# Remove any invalid (negative or NaN) rates
df = df[
    (df['Death_Rate_per_100k'] >= 0) &
    (df['Injury_Rate_per_100k'] >= 0)
].dropna()

# 6. Final shape and preview
print(f"\nâœ… Final cleaned dataset shape: {df.shape}")
df.head()

import matplotlib.pyplot as plt
import seaborn as sns

# Set theme
sns.set(style="whitegrid")

# Bar Chart â€“ Average death and injury rate by Gender
gender_avg = df.groupby("Gender")[["Death_Rate_per_100k", "Injury_Rate_per_100k"]].mean().reset_index()

# Plot
plt.figure(figsize=(8, 5))
gender_avg.set_index("Gender").plot(kind="bar", figsize=(8, 5), colormap="viridis")
plt.title("Average Death & Injury Rates by Gender")
plt.ylabel("Rate per 100,000")
plt.xticks(rotation=0)
plt.grid(axis="y")
plt.tight_layout()
plt.show()

# Group by Year and calculate average rates
yearly_avg = df.groupby("Year")[["Death_Rate_per_100k", "Injury_Rate_per_100k"]].mean().reset_index()

# Plot
plt.figure(figsize=(8, 5))
sns.lineplot(data=yearly_avg, x="Year", y="Death_Rate_per_100k", label="Death Rate", marker="o")
sns.lineplot(data=yearly_avg, x="Year", y="Injury_Rate_per_100k", label="Injury Rate", marker="o")
plt.title("Average Death & Injury Rates Over Years")
plt.ylabel("Rate per 100,000")
plt.grid(True)
plt.tight_layout()
plt.show()

# Count of records by vehicle type
vehicle_counts = df["Vehicle_Type"].value_counts()

# Plot
plt.figure(figsize=(6, 6))
plt.pie(vehicle_counts, labels=vehicle_counts.index, autopct="%1.1f%%", startangle=140)
plt.title("Distribution of Road Traffic Incidents by Vehicle Type")
plt.axis("equal")
plt.tight_layout()
plt.show()

# Grouped bar chart by Age Group and Gender
grouped = df.groupby(['Age_Group', 'Gender'])[['Death_Rate_per_100k', 'Injury_Rate_per_100k']].mean().unstack()
grouped.plot(kind='bar', figsize=(10, 6))
plt.title("Average Death & Injury Rates by Age Group and Gender")
plt.ylabel("Rate per 100,000")
plt.xlabel("Age Group")
plt.xticks(rotation=45)
plt.legend(title="Metric & Gender")
plt.tight_layout()
plt.show()

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pandas as pd
# import matplotlib.pyplot as plt
# 
# # Load data
# df = pd.read_csv("road_traffic_injuries_sample.csv")
# 
# # Title and intro
# st.title("ðŸ“Š Road Traffic Injuries Dashboard")
# st.markdown("This dashboard analyzes road traffic injury and death rates across age groups, gender, vehicle types, and time.")
# 
# # Filters
# countries = st.multiselect("Select Countries:", df['Country'].unique(), default=df['Country'].unique())
# years = st.multiselect("Select Years:", sorted(df['Year'].unique()), default=df['Year'].unique())
# 
# # Filtered dataset
# filtered_df = df[(df['Country'].isin(countries)) & (df['Year'].isin(years))]
# 
# # --- Gender bar chart ---
# st.subheader("Average Death & Injury Rates by Gender")
# gender_stats = filtered_df.groupby('Gender')[['Death_Rate_per_100k', 'Injury_Rate_per_100k']].mean()
# fig1, ax1 = plt.subplots()
# gender_stats.plot(kind='bar', ax=ax1, color=['purple', 'yellow'])
# plt.title("Average Death & Injury Rates by Gender")
# plt.ylabel("Rate per 100,000")
# st.pyplot(fig1)
# 
# # --- Time series ---
# st.subheader("Average Death & Injury Rates Over Years")
# year_stats = filtered_df.groupby('Year')[['Death_Rate_per_100k', 'Injury_Rate_per_100k']].mean()
# fig2, ax2 = plt.subplots()
# year_stats.plot(ax=ax2, marker='o')
# plt.title("Average Death & Injury Rates Over Years")
# plt.ylabel("Rate per 100,000")
# st.pyplot(fig2)
# 
# # --- Pie chart by vehicle type ---
# st.subheader("Distribution of Road Traffic Incidents by Vehicle Type")
# fig3, ax3 = plt.subplots()
# vehicle_counts = filtered_df['Vehicle_Type'].value_counts()
# ax3.pie(vehicle_counts, labels=vehicle_counts.index, autopct='%1.1f%%')
# ax3.axis('equal')
# plt.title("Distribution by Vehicle Type")
# st.pyplot(fig3)
# 
# # --- Grouped bar chart by Age & Gender ---
# st.subheader("Death & Injury Rates by Age Group and Gender")
# grouped = filtered_df.groupby(['Age_Group', 'Gender'])[['Death_Rate_per_100k', 'Injury_Rate_per_100k']].mean().unstack()
# fig4, ax4 = plt.subplots(figsize=(10,6))
# grouped.plot(kind='bar', ax=ax4)
# plt.title("Rates by Age Group and Gender")
# plt.ylabel("Rate per 100,000")
# st.pyplot(fig4)
#